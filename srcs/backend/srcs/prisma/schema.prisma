// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  displayname String
  email       String @unique
  nickname    String @unique
  photoUrl    String
  status      Status @default(OFFLINE)

  twoFactorEnabled Boolean @default(false)
  twoFactorSecret  String?
  twoFactorQrCode  String?

  totalGame  Int   @default(0)
  totalWin   Int   @default(0)
  totalLose  Int   @default(0)
  winRate    Int   @default(0)
  title      Title @default(CAYLAK)
  globalRank Int   @default(0)

  chatRoomIds String[]
  friendIds   Int[]
  blockedUserIds Int[]

  sentFriendRequests     FriendRequest[] @relation("SentRequest")
  receivedFriendRequests FriendRequest[] @relation("ReceivedRequest")

  gameHistory GameHistory[]
}

model Chatroom {
  id         String        @id @default(cuid())
  name       String
  ownerId    Int
  roomStatus RoomStatus
  password   String?

  adminIds   Int[]
  muteList   MuteObject[] @relation("MuteList")
  banList    BanObject[] @relation("BanList")

  messages Message[] @relation("Messages")
}

model MuteObject {
  id  Int @id @default(autoincrement())

  userId Int
  expireDate BigInt

  chatroom   Chatroom @relation("MuteList", fields: [chatroomId], references: [id])
  chatroomId String
}

model BanObject {
  id  Int @id @default(autoincrement())

  userId Int
  expireDate BigInt
  
  chatroom   Chatroom @relation("BanList", fields: [chatroomId], references: [id])
  chatroomId String
}

model Message {
  id Int @id @default(autoincrement())

  userId    Int
  createdAt DateTime @default(now())
  data      String

  chatroom   Chatroom @relation("Messages", fields: [chatroomId], references: [id])
  chatroomId String
}

model Game {
  id          Int @id @default(autoincrement())
  playerOneId Int
  playerTwoId Int
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model GameHistory {
  id            Int     @id @default(autoincrement())
  user          User    @relation(fields: [userId], references: [id])
  userId        Int
  opponentId    Int
  win           Boolean
  userScore     Int
  opponentScore Int
}

model FriendRequest {
  sender           User   @relation("SentRequest", fields: [senderId], references: [id])
  senderId         Int
  receiver         User   @relation("ReceivedRequest", fields: [receiverId], references: [id])
  receiverId       Int
  uniqueIdentifier String @unique

  @@id([senderId, receiverId])
}

enum Title {
  CAYLAK
  USTA
  BUYUKUSTA
  EFSANE
  SANLI
}

enum Status {
  ONLINE
  OFFLINE
  ATGAME
}

enum RoomStatus {
  PRIVATE
  PUBLIC
  PROTECTED
}
